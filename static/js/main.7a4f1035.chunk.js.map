{"version":3,"sources":["components/PeopleList.tsx","data/people.ts","App.tsx","index.tsx"],"names":["PeopleList","React","memo","people","selectedPersonId","onSelect","isVisible","className","role","length","map","person","classNames","name","tabIndex","onClick","onKeyDown","e","key","sex","peopleFromServer","born","died","fatherName","motherName","slug","App","delay","useState","query","setQuery","appliedQuery","setAppliedQuery","selectedPerson","setSelectedPerson","applyQuery","useCallback","debounce","setIsVisible","filteredPeople","useMemo","filter","toLowerCase","includes","personField","useRef","useEffect","current","focus","ref","type","placeholder","value","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a4f1035.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  people: Person[];\n  selectedPersonId?: string;\n  onSelect?: (person: Person) => void;\n  isVisible: boolean;\n};\n\nexport const PeopleList: React.FC<Props> = React.memo(({\n  people,\n  selectedPersonId,\n  onSelect = () => { },\n  isVisible,\n}) => {\n  return (\n    <div className={`dropdown-menu ${isVisible ? 'is-active' : 'is-hidden'}`} role=\"menu\">\n      <div className=\"dropdown-content\">\n        {(people.length !== 0) ? (\n          people.map((person) => (\n            <div\n              className={classNames('dropdown-item', {\n                'has-background-info': selectedPersonId === person.name,\n              })}\n              role=\"button\"\n              tabIndex={0}\n              key={person.name}\n              onClick={() => onSelect(person)}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter' || e.key === 'Space') {\n                  onSelect(person);\n                }\n              }}\n            >\n              <p className={(person.sex === 'm')\n                ? 'has-text-link' : 'has-text-danger'}\n              >\n                {person.name}\n              </p>\n            </div>\n          ))\n        ) : (\n          <div className=\"dropdown-item\">No matching suggestions</div>\n        )}\n      </div>\n    </div>\n  );\n});\n","import { Person } from '../types/Person';\n\nexport const peopleFromServer: Person[] = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    fatherName: 'Carel Haverbeke',\n    motherName: 'Maria van Brussel',\n    slug: 'carolus-haverbeke-1832',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    fatherName: 'Petrus de Milliano',\n    motherName: 'Sophia van Damme',\n    slug: 'emma-de-milliano-1876',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    fatherName: 'Frederik de Rycke',\n    motherName: 'Laurentia van Vlaenderen',\n    slug: 'maria-de-rycke-1683',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    fatherName: 'Jacobus van Brussel',\n    motherName: 'Joanna van Rooten',\n    slug: 'jan-van-brussel-1714',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'philibert-haverbeke-1907',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    fatherName: 'Jacobus Bernardus van Brussel',\n    motherName: null,\n    slug: 'jan-frans-van-brussel-1761',\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    fatherName: 'N. van Haverbeke',\n    motherName: null,\n    slug: 'pauwels-van-haverbeke-1535',\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    fatherName: 'Henry Aernoudts',\n    motherName: 'Sidonie Coene',\n    slug: 'clara-aernoudts-1918',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    fatherName: 'Carolus Haverbeke',\n    motherName: 'Maria Sturm',\n    slug: 'emile-haverbeke-1877',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    fatherName: 'Carel de Causmaecker',\n    motherName: 'Joanna Claes',\n    slug: 'lieven-de-causmaecker-1696',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    fatherName: 'Lieven van Haverbeke',\n    motherName: null,\n    slug: 'pieter-haverbeke-1602',\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    fatherName: 'Daniel Haverbeke',\n    motherName: 'Joanna de Pape',\n    slug: 'livina-haverbeke-1692',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    fatherName: 'Willem Haverbeke',\n    motherName: 'Petronella Wauters',\n    slug: 'pieter-bernard-haverbeke-1695',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    fatherName: 'Pauwels van Haverbeke',\n    motherName: 'Lievijne Jans',\n    slug: 'lieven-van-haverbeke-1570',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    fatherName: 'Bernardus de Causmaecker',\n    motherName: null,\n    slug: 'joanna-de-causmaecker-1762',\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'willem-haverbeke-1668',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    fatherName: 'Jan Francies Haverbeke',\n    motherName: 'Petronella de Decker',\n    slug: 'pieter-antone-haverbeke-1753',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    fatherName: 'Jan Frans van Brussel',\n    motherName: 'Joanna de Causmaecker',\n    slug: 'maria-van-brussel-1801',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'angela-haverbeke-1728',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'elisabeth-haverbeke-1711',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    fatherName: null,\n    motherName: null,\n    slug: 'lievijne-jans-1542',\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    fatherName: 'Lieven de Causmaecker',\n    motherName: 'Livina Haverbeke',\n    slug: 'bernardus-de-causmaecker-1721',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    fatherName: 'Lieven Lammens',\n    motherName: 'Livina de Vrieze',\n    slug: 'jacoba-lammens-1699',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    fatherName: 'Joos de Decker',\n    motherName: 'Petronella van de Steene',\n    slug: 'pieter-de-decker-1705',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'joanna-de-pape-1654',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'daniel-haverbeke-1652',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    fatherName: 'Pieter Haverbeke',\n    motherName: 'Anna van Hecke',\n    slug: 'lieven-haverbeke-1631',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'martina-de-pape-1666',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'jan-francies-haverbeke-1725',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'maria-haverbeke-1905',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    fatherName: 'Pieter de Decker',\n    motherName: 'Livina Haverbeke',\n    slug: 'petronella-de-decker-1731',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    fatherName: 'Jan Sierens',\n    motherName: 'Maria van Waes',\n    slug: 'livina-sierens-1761',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'laurentia-haverbeke-1710',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    fatherName: 'Pieter Antone Haverbeke',\n    motherName: 'Livina Sierens',\n    slug: 'carel-haverbeke-1796',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    fatherName: 'Willem Hercke',\n    motherName: 'Margriet de Brabander',\n    slug: 'elisabeth-hercke-1632',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'jan-haverbeke-1671',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    fatherName: 'Paschasius van Hecke',\n    motherName: 'Martijntken Beelaert',\n    slug: 'anna-van-hecke-1607',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    fatherName: 'Charles Sturm',\n    motherName: 'Seraphina Spelier',\n    slug: 'maria-sturm-1835',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    fatherName: 'Jan van Brussel',\n    motherName: 'Elisabeth Haverbeke',\n    slug: 'jacobus-bernardus-van-brussel-1736',\n  },\n];\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport './App.scss';\nimport debounce from 'lodash.debounce';\nimport { PeopleList } from './components/PeopleList';\nimport { peopleFromServer } from './data/people';\nimport { Person } from './types/Person';\n\nexport interface AppProps {\n  delay: number;\n}\n\nexport const App: React.FC<AppProps> = ({ delay }) => {\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null);\n  const applyQuery = useCallback(\n    debounce(setAppliedQuery, delay), [delay],\n  );\n  const [isVisible, setIsVisible] = useState(true);\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    applyQuery(event.target.value);\n\n    if (event.target.value === '') {\n      setIsVisible(true);\n    }\n  };\n\n  const handleSuggestionSelect = (person: Person) => {\n    setSelectedPerson(person);\n    setQuery(person.name);\n    setIsVisible(false);\n  };\n\n  const filteredPeople = useMemo(() => {\n    return peopleFromServer.filter(person => person.name.toLowerCase().includes(\n      appliedQuery.toLowerCase(),\n    ));\n  }, [appliedQuery]);\n\n  const personField = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (personField.current) {\n      personField.current.focus();\n    }\n  }, [selectedPerson]);\n\n  return (\n    <main className=\"section\">\n      <h1 className=\"title\">\n        {selectedPerson ? `${selectedPerson?.name} (${selectedPerson?.born} = ${selectedPerson?.died})` : 'No selected person'}\n      </h1>\n\n      <div className=\"dropdown is-active\">\n        <div className=\"dropdown-trigger\">\n          <input\n            ref={personField}\n            type=\"text\"\n            placeholder=\"Enter a part of the name\"\n            className=\"input\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n        </div>\n\n        <PeopleList\n          people={filteredPeople}\n          selectedPersonId={selectedPerson?.name}\n          onSelect={handleSuggestionSelect}\n          isVisible={isVisible}\n        />\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App delay={1000} />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}